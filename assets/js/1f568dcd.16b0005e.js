"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1465],{36091:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var s=a(85893),t=a(11151);const i={title:"Upgrade channel",sidebar_label:"Upgrade channel",sidebar_position:5,slug:"/channel-upgrades/upgrade-channel"},c="Upgrade the ICS 20 transfer channel",r={id:"channel-upgrades/upgrade-channel",title:"Upgrade channel",description:"Start the relayer",source:"@site/tutorials/02-channel-upgrades/05-upgrade-channel.md",sourceDirName:"02-channel-upgrades",slug:"/channel-upgrades/upgrade-channel",permalink:"/tutorials/channel-upgrades/upgrade-channel",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Upgrade channel",sidebar_label:"Upgrade channel",sidebar_position:5,slug:"/channel-upgrades/upgrade-channel"},sidebar:"defaultSidebar",previous:{title:"Open transfer channel",permalink:"/tutorials/channel-upgrades/open-channel"},next:{title:"Incentivize packet",permalink:"/tutorials/channel-upgrades/incentivize-packet"}},l={},o=[{value:"Start the relayer",id:"start-the-relayer",level:2},{value:"Initiate the upgrade",id:"initiate-the-upgrade",level:2},{value:"With <code>upgrade-channels</code> CLI",id:"with-upgrade-channels-cli",level:3},{value:"With <code>submit-proposal</code> CLI",id:"with-submit-proposal-cli",level:3},{value:"Check upgrade completed",id:"check-upgrade-completed",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"upgrade-the-ics-20-transfer-channel",children:"Upgrade the ICS 20 transfer channel"}),"\n",(0,s.jsx)(n.h2,{id:"start-the-relayer",children:"Start the relayer"}),"\n",(0,s.jsx)(n.p,{children:"We start the relayer:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"hermes --config config.toml start\n"})}),"\n",(0,s.jsx)(n.h2,{id:"initiate-the-upgrade",children:"Initiate the upgrade"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://ibc.cosmos.network/main/ibc/channel-upgrades#governance-gating-on-chanupgradeinit",children:"initiation of the upgrade process is authority-gated"}),", and thus the upgrade will begin when a governance proposal passes. There a couple of ways in which the initiation can be triggered."]}),"\n",(0,s.jsxs)(n.h3,{id:"with-upgrade-channels-cli",children:["With ",(0,s.jsx)(n.code,{children:"upgrade-channels"})," CLI"]}),"\n",(0,s.jsxs)(n.p,{children:["We have a ",(0,s.jsx)(n.a,{href:"https://github.com/cosmos/ibc-go/blob/v8.1.0/modules/core/04-channel/client/cli/tx.go#L62",children:"CLI command"})," that streamlines the submission of the governance proposal to initiate the upgrade. By default the CLI will upgrade all channels on ",(0,s.jsx)(n.code,{children:"transfer"})," port with the provided channel version string. Both the port and the channels to be upgraded can be customized with CLI flags. To keep it simple, and since we only have one ICS20 channel, for this example the CLI command would look like the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'simd tx ibc channel upgrade-channels "{\\"fee_version\\":\\"ics29-1\\",\\"app_version\\":\\"ics20-1\\"}" --deposit 10stake\n'})}),"\n",(0,s.jsx)(n.p,{children:"After the governance proposal is submitted, the user can vote for it and wait that it passes, but these steps are shown in more detail in the next section."}),"\n",(0,s.jsxs)(n.h3,{id:"with-submit-proposal-cli",children:["With ",(0,s.jsx)(n.code,{children:"submit-proposal"})," CLI"]}),"\n",(0,s.jsxs)(n.p,{children:["And alternative way of submitting the proposal is using ",(0,s.jsx)(n.code,{children:"x/gov"})," module's CLI command. The contents of the governance proposal are:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:"title=proposal.json",children:'{\n  "title": "Channel upgrade init",\n  "summary": "Channel upgrade init",\n  "messages": [\n    {\n      "@type": "/ibc.core.channel.v1.MsgChannelUpgradeInit",\n      "signer": "cosmos10d07y265gmmuvt4z0w9aw880jnsr700j6zn9kn",\n      "port_id": "transfer",\n      "channel_id": "channel-0",\n      "fields": {\n        "ordering": "ORDER_UNORDERED",\n        "connection_hops": ["connection-0"],\n        "version": "{\\"fee_version\\":\\"ics29-1\\",\\"app_version\\":\\"ics20-1\\"}"\n      }\n    }\n  ],\n  "metadata": "AQ==",\n  "deposit": "100005stake"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["where ",(0,s.jsx)(n.code,{children:"cosmos10d07y265gmmuvt4z0w9aw880jnsr700j6zn9kn"})," is the address of the governance module on ",(0,s.jsx)(n.code,{children:"chain1"}),". You can retrieve the account of the governance module running the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd query auth module-account gov --node http://localhost:27000\n"})}),"\n",(0,s.jsx)(n.p,{children:"The upgrade will modify the channel version to include the fee version. We submit the proposal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd tx gov submit-proposal ./proposal_upgrade_channel.json \\\n--from $VALIDATOR_CHAIN1 \\\n--chain-id chain1 \\\n--keyring-backend test \\\n--home ../../gm/chain1 \\\n--node http://localhost:27000\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we vote for the proposal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd tx gov vote 1 yes \\\n--from $VALIDATOR_CHAIN1 \\\n--chain-id chain1 \\\n--keyring-backend test \\\n--home ../../gm/chain1 \\\n--node http://localhost:27000\n"})}),"\n",(0,s.jsxs)(n.p,{children:["And we wait for the voting period to end (approximately 3 minutes). Once it ends we can check that the proposal has passed (i.e. the status has changed from ",(0,s.jsx)(n.code,{children:"PROPOSAL_STATUS_VOTING_PERIOD"})," to ",(0,s.jsx)(n.code,{children:"PROPOSAL_STATUS_PASSED"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd q gov proposals --node http://localhost:27000\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'pagination:\n  total: "1"\nproposals:\n- deposit_end_time: "2024-01-27T21:29:52.430508Z"\n  final_tally_result:\n    abstain_count: "0"\n    no_count: "0"\n    no_with_veto_count: "0"\n    yes_count: "1000000"\n  id: "1"\n  messages:\n  - type: /ibc.core.channel.v1.MsgChannelUpgradeInit\n    value:\n      channel_id: channel-0\n      fields: {}\n      port_id: transfer\n      signer: cosmos10d07y265gmmuvt4z0w9aw880jnsr700j6zn9kn\n  metadata: AQ==\n  proposer: cosmos1vdy5fp0jy2l2ees870a7mls357v7uad6ufzcyz\n  status: 3\n  submit_time: "2024-01-25T21:29:52.430508Z"\n  summary: Channel upgrade init\n  title: Channel upgrade init\n  total_deposit:\n  - amount: "100005"\n    denom: stake\n  voting_end_time: "2024-01-25T21:32:52.430508Z"\n  voting_start_time: "2024-01-25T21:29:52.430508Z"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Now we wait for the relayer to complete the upgrade handshake."}),"\n",(0,s.jsx)(n.h2,{id:"check-upgrade-completed",children:"Check upgrade completed"}),"\n",(0,s.jsx)(n.p,{children:"Once the handshake has completed we verify that the channel has successfully upgraded:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd q ibc channel channels --node http://localhost:27000\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'channels:\n- channel_id: channel-0\n  connection_hops:\n  - connection-0\n  counterparty:\n    channel_id: channel-0\n    port_id: transfer\n  ordering: ORDER_UNORDERED\n  port_id: transfer\n  state: STATE_OPEN\n  upgrade_sequence: "1"\n  version: \'{"fee_version":"ics29-1","app_version":"ics20-1"}\'\nheight:\n  revision_height: "135"\n  revision_number: "0"\npagination:\n  next_key: null\n  total: "0"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The channel version on ",(0,s.jsx)(n.code,{children:"chain1"})," is what we expect."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd q ibc-fee channels --node http://localhost:27000\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'fee_enabled_channels:\n- channel_id: channel-0\n  port_id: transfer\npagination:\n  next_key: null\n  total: "0"\n'})}),"\n",(0,s.jsx)(n.p,{children:"As we expect there is one incentivized channel."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd q ibc channel channels --node http://localhost:27010\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'channels:\n- channel_id: channel-0\n  connection_hops:\n  - connection-0\n  counterparty:\n    channel_id: channel-0\n    port_id: transfer\n  ordering: ORDER_UNORDERED\n  port_id: transfer\n  state: STATE_OPEN\n  upgrade_sequence: "1"\n  version: \'{"fee_version":"ics29-1","app_version":"ics20-1"}\'\nheight:\n  revision_height: "138"\n  revision_number: "0"\npagination:\n  next_key: null\n  total: "0"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The channel version on ",(0,s.jsx)(n.code,{children:"chain2"})," is also what we expect."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"simd q ibc-fee channels --node http://localhost:27010\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'fee_enabled_channels:\n- channel_id: channel-0\n  port_id: transfer\npagination:\n  next_key: null\n  total: "0"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["As we expect there is one incentivized channel as well on ",(0,s.jsx)(n.code,{children:"chain2"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"From now ICS 20 packets sent on this channel can be incentivized."})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>r,a:()=>c});var s=a(67294);const t={},i=s.createContext(t);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);