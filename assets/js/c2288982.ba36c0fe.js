"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[64662],{21383:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=s(85893),t=s(11151);const i={title:"Run 2 Cosmos SDK Blockchains Locally",sidebar_label:"Run 2 Cosmos SDK Blockchains Locally",sidebar_position:3,slug:"/channel-upgrades/run-chains"},a="Run 2 Cosmos SDK blockchains locally",r={id:"channel-upgrades/run-chains",title:"Run 2 Cosmos SDK Blockchains Locally",description:"The gm tool uses a configuration file. This tutorial uses the following configuration file for gm:",source:"@site/tutorials/02-channel-upgrades/03-run-chains.md",sourceDirName:"02-channel-upgrades",slug:"/channel-upgrades/run-chains",permalink:"/tutorials/channel-upgrades/run-chains",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Run 2 Cosmos SDK Blockchains Locally",sidebar_label:"Run 2 Cosmos SDK Blockchains Locally",sidebar_position:3,slug:"/channel-upgrades/run-chains"},sidebar:"defaultSidebar",previous:{title:"Set Up Your Work Environment",permalink:"/tutorials/channel-upgrades/setup-env"},next:{title:"Open transfer channel",permalink:"/tutorials/channel-upgrades/open-channel"}},c={},l=[];function d(n){const e={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,t.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"run-2-cosmos-sdk-blockchains-locally",children:"Run 2 Cosmos SDK blockchains locally"}),"\n",(0,o.jsxs)(e.p,{children:["The gm tool uses a ",(0,o.jsx)(e.a,{href:"https://github.com/informalsystems/gm/blob/master/gm.toml",children:"configuration file"}),". This tutorial uses the following configuration file for gm:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yaml",metastring:'title="gm.toml"',children:'[global]\nadd_to_hermes=true\nhome_dir="~/testing/gm"\n\n[global.hermes]\nbinary="~/testing/hermes/hermes"\nconfig="~/testing/hermes/config.toml"\n\n[chain1]\n  gaiad_binary="~/testing/bin/chain1/simd"  \n  ports_start_at=27000\n\n[chain2]\n  gaiad_binary="~/testing/bin/chain2/simd" \n  ports_start_at=27010\n'})}),"\n",(0,o.jsxs)(e.p,{children:["The configuration file needs to be placed in ",(0,o.jsx)(e.code,{children:"$HOME/.gm"}),". This configuration file sets up 2 blockchains (",(0,o.jsx)(e.code,{children:"chain1"})," and ",(0,o.jsx)(e.code,{children:"chain2"}),"), each with 2 accounts (1 validator, 1 wallet). The ports where the CometBFT RPC interface for each chain is 27000 for ",(0,o.jsx)(e.code,{children:"chain1"})," and 27010 for ",(0,o.jsx)(e.code,{children:"chain2"}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["In order to shorten the voting period of governance proposal, we are going to change some of the ",(0,o.jsx)(e.code,{children:"x/gov"})," module parameters in the ",(0,o.jsx)(e.code,{children:"genesis.json"})," file, so that we can complete the upgrade faster. These are the changes needed in the ",(0,o.jsx)(e.code,{children:"genesis.json"})," of ",(0,o.jsx)(e.code,{children:"chain1"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",metastring:'title="genesis.json"',children:'"gov": {\n  "starting_proposal_id": "1",\n  "deposits": [],\n  "votes": [],\n  "proposals": [],\n  "deposit_params": null,\n  "voting_params": null,\n  "tally_params": null,\n  "params": {\n    "min_deposit": [\n      {\n        "denom": "stake",\n// minus-diff-line\n-       "amount": "10000000"\n// plus-diff-line\n+       "amount": "100"\n      }\n    ],\n    "max_deposit_period": "172800s",\n// minus-diff-line\n-   "voting_period": "172800s",\n// plus-diff-line\n+   "voting_period": "180s",\n    "quorum": "0.334000000000000000",\n// minus-diff-line\n-   "threshold": "0.500000000000000000",\n// plus-diff-line\n+   "threshold": "0.300000000000000000",\n    "veto_threshold": "0.334000000000000000",\n    "min_initial_deposit_ratio": "0.000000000000000000",\n    "proposal_cancel_ratio": "0.500000000000000000",\n    "proposal_cancel_dest": "",\n    "expedited_voting_period": "86400s",\n    "expedited_threshold": "0.667000000000000000",\n    "expedited_min_deposit": [\n      {\n        "denom": "stake",\n        "amount": "50000000"\n      }\n    ],\n    "burn_vote_quorum": false,\n    "burn_proposal_deposit_prevote": false,\n    "burn_vote_veto": true,\n    "min_deposit_ratio": "0.010000000000000000"\n  },\n  "constitution": ""\n}\n'})}),"\n",(0,o.jsx)(e.p,{children:"We start both blockchains by running the following command:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"gm start\n"})}),"\n",(0,o.jsxs)(e.p,{children:["For convenience, we are going to store a few account addresses as variables in the current shell environment. Execute the following commands to store the relayer addresses on chains ",(0,o.jsx)(e.code,{children:"chain1"})," and ",(0,o.jsx)(e.code,{children:"chain2"}),", respectively:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"export RLY_CHAIN1=$(simd keys show wallet -a \\\n--keyring-backend test \\\n--home ../../gm/chain1) && echo $RLY_CHAIN1;\nexport RLY_CHAIN2=$(simd keys show wallet -a \\\n--keyring-backend test \\\n--home ../../gm/chain2) && echo $RLY_CHAIN2;\n"})}),"\n",(0,o.jsxs)(e.p,{children:["And execute also the following commands to store the validator account addresses on chains ",(0,o.jsx)(e.code,{children:"chain1"})," and ",(0,o.jsx)(e.code,{children:"chain2"})," that we will use throughout this tutorial:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"export VALIDATOR_CHAIN1=$(simd keys show validator -a \\\n--keyring-backend test \\\n--home ../../gm/chain1) && echo $VALIDATOR_CHAIN1;\nexport VALIDATOR_CHAIN2=$(simd keys show validator -a \\\n--keyring-backend test \\\n--home ../../gm/chain2) && echo $VALIDATOR_CHAIN2;\n"})})]})}function h(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},11151:(n,e,s)=>{s.d(e,{Z:()=>r,a:()=>a});var o=s(67294);const t={},i=o.createContext(t);function a(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);